一、Ajax
	1.1.为什么要使用Ajax
		无刷新：不刷新整个页面，只刷新局部
		无刷新的好处
			只更新部分页面，有效利用带宽
			提供连续的用户体验
			提供类似C/S的交互效果，操作更方便
	1.2.什么是Ajax(异步刷新技术)
		Web 2.0的特点
			用户贡献内容 
			内容聚合RSS 
			更丰富的“用户体验“
			所有操作都是在不刷新窗口的情况下完成的
	1.3.传统Web与Ajax的差异
		PPT查看差异介绍
	1.4.Ajax工作流程
		通过PPT查看流程图(强调Ajax技术的核心)
	1.5.XMLHttpRequest
		整个Ajax技术的核心
		提供异步发送请求的能力 
		常用方法：通过PPT查看方法表格
		事件
			onreadystatechange：指定回调函数 
		常用属性
			readyState：XMLHttpRequest的状态信息
				0	XMLHttpRequest对象未完成初始化
				1	XMLHttpRequest对象开始发送请求
				2	XMLHttpRequest对象的请求发送完成
				3 	XMLHttpRequest对象开始读取响应
				4	XMLHttpRequest对象读取响应结束
			status：HTTP的状态码 参考：http://www.cnblogs.com/chris-oil/p/3366641.html
				200	服务器正确返回响应
				404	请求的资源不存在
				500	服务器内部错误
				403 没有访问权限
				302 
			statusText：返回当前请求的响应状态
			responseText：以文本形式获得响应的内容 
			responseXML：将XML格式的响应内容解析成  DOM对象返回
	1.6.GET请求和POST请求的区别
		通过PPT查看介绍表格

二、jQuery的Ajax
	2.1.为什么要使用jQuery的Ajax？
		传统方式实现Ajax的不足
			步骤繁琐
			方法、属性、常用值较多不好记忆
			处理复杂结构的响应数据（如XML格式）比较烦琐
			浏览器兼容问题
		jQuery将Ajax相关操作都进行了封装
		
	2.2.使用
		$.ajax(...);
		1.常用属性参数
			url		String	发送请求的地址，默认为当前页地址
			type	String	请求方式，默认为GET
			data	PlainObject	发送到服务器的数据
					或 String	发送到服务器的数据
					或 Array	发送到服务器的数据
			dataType	String	预期服务器返回的数据类型，包括：XML、HTML、Script、JSON、JSONP、text
			timeout	Number	设置请求超时时间
			global	Boolean	表示是否触发全局Ajax事件，默认为true
		2.常用函数参数
			beforeSend	Function ( jqXHR  jqxhr, PlainObject  settings )					发送请求前调用的函数
			success		Function( 任意类型  result, String  textStatus, jqXHR  jqxhr )		请求成功后调用的函数参数result：可选，由服务器返回的数据
			error		Function ( jqXHR  jqxhr, String  textStatus, String  errorThrown )	请求失败时调用的函数
			complete	Function ( jqXHR  jqxhr, tring textStatus )							请求完成后（无论成功还是失败）调用的函数

		3.示例：
			$.ajax( {
				"url":"url",                      // 要提交的URL路径
				"type":"get",                     // 发送请求的方式
				"data":data,                      // 要发送到服务器的数据
				"dataType":"text",                // 指定传输的数据格式
				"success":function(result) { 	  // 请求成功后要执行的代码
				},
				"error":function() {           	  // 请求失败后要执行的代码
				}
			} );

三、JSON
	3.1.什么是JSON
		JSON（JavaScript  Object  Notation）
		一种轻量级的数据交换格式
		采用独立于语言的文本格式
		通常用于在客户端和服务器之间传递数据
	3.2.JSON的优点
		轻量级交互语言
		结构简单
		易于解析
	3.3.定义JSON
		定义对象语法：var JSON对象 = { "name" : value,  "name" : value,  …… };
		示例：var person = { "name" : "张三",   "age" : 30,  "spouse" : null };
		
		定义数组语法：var JSON数组 = [ value,  value,  …… ];
		示例：var countryArray = [ "中国",  "美国",  "俄罗斯" ];
			  var personArray = [ { "name":"张三",  "age":30 },
                                  { "name":"李四",  "age":40 } ];
								  
						{1,2,3}
						{
							{1,2,3},
							{1,2,3}
						}
	3.4.JSON扩展
		提供JSON JAR包，根据博客http://www.blogjava.net/xcp/archive/2008/10/31/json2.html进行练习
四、总结

作业：
	1.ajax
	2.jquery的Ajax